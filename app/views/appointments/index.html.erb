
<h2> Your Appointmnets </h2>

<form id="new-appointment_form" data-user_id="<%= current_user.id %>">
  <h3> Appointment for: <%= current_user.email %></h3>

  <label for="new-appointment_hair_stylist"> Hair Stylist </label>
  <!-- <select id="new-appointment_hair_stylist" value=" select stylist" required > -->
  <select id="new-appointment_hair_stylist" value=" select stylist" required >

  <% @list_of_hairstylist.each do |stylist| %>
      <option value="<%= stylist.id %>">
      <%= stylist.name %>  id: <%= stylist.id %>
      </option>
  <% end %>
  </select>

<br>
<br>

<label for="new-appointment_hairstyle"> Hairstyle </label>
<select id="new-appointment_hairstyle" value="haircut">
      <option value="haircut">haircut</option>
      <option value="coloring"> coloring</option>
      <option value="haircut_and_coloring">haircut_and_coloring</option>
</select>

<br>
<br>

<label for="new-appointment_date_time"> Date & Time : </label>
<input id="new-appointment_date_time" type="date" required >


<button id="new-appointment_create"> Create Appointment </button>

</form>


<div id='apptBlock' data-user_id='<%= current_user.id %>'></div>


<script type="text/javascript">

  (function() {
    const userId = document.getElementById('apptBlock').dataset.user_id

    const checkStatus = response =>
          (response.status === 200)
          ? Promise.resolve(response)
          : Promise.reject(new Error(response.statusText));

        const handleError = err => {
          console.error(err);
          alert('Has some issues to handle your request.');
        };

        fetch(`http://localhost:3000/users/${userId}/appointments.json`)
        .then(checkStatus)
        .then(res => res.json())
        .then(json => {
          const user = json.user; // {}
          const appointments = json.appointments; // []


  // Must render at least one index page (index resource - 'list of things') via JavaScript and an Active Model Serialization JSON Backend.
          appointments.forEach(appointments => {
            const newAppointment = new Appointment({appointments, user, hasInfo: false});
            newAppointment.renderAppointment();

          })
        })

        .catch(handleError)

  })()

</script>

<script type="text/javascript">

(function() {

  const checkStatus = response =>
        (response.status === 200)
        ? Promise.resolve(response)
        : Promise.reject(new Error(response.statusText));

      const handleError = err => {
        console.error(err);
        alert('Has some issues to handle your request.');
      };

      const createButton = document.getElementById("new-appointment_create");
      createButton.addEventListener('click', handleCreateAppointment);



      function handleCreateAppointment(event) {

        const form = document.getElementById('new-appointment_form');

        if (!form.checkValidity()) return;
        event.preventDefault(); //prevent send request to server

        const data = {
          hair_stylist_id: document.getElementById('new-appointment_hair_stylist').value,
          hairstyle: document.getElementById('new-appointment_hairstyle').value,
          date_time: document.getElementById('new-appointment_date_time').value,
        };
        console.log(data);

     const userId = form.dataset.user_id;

     const options = {
       method: "POST",
       body: JSON.stringify(data),
       headers:{
       'Content-Type': 'application/json', Accept: "application/json"
      },
     };

     fetch(`http://localhost:3000/users/${userId}/appointments`, options)
     .then(checkStatus)
     .then(res => res.json())
     .then(json => {
       //console.log(json);
       const newAppointment = new Appointment({
         appointments: json.appointmentInfo,
         user: json.user,
         hasInfo: false
       });
       newAppointment.renderAppointment()

      }
     )
     .catch(handleError)

      }
})()
</script>
